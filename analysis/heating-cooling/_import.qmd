---
title: "Data preprocessing"
author: "James Goldie, 360info"
---

```{r}
#| label: importsetup
library(tidyverse)
library(arrow)
library(here)
```

Some notes about these datasets:

The [observational data](https://ahd.csiro.au/wp-content/uploads/2021/08/Typical-meteorological-year-weather-files-User-Guide-v4.pdf) represents a "typical meteorological year" for a location. It is based on historical data over 1995-2010, but it's neither an average for a given day, nor 

```{r}
#| label: get-epw-files

# https://ahd.csiro.au/wp-content/uploads/Projected-weather-files-User-Guide-v6.pdf
# https://ahd.csiro.au/wp-content/uploads/2021/08/Typical-meteorological-year-weather-files-User-Guide-v4.pdf
tibble(
  path = list.files(here("data", "csiro-climate", "projections"), pattern = "*.epw",
    full.names = TRUE, recursive = TRUE)) %>%
  mutate(
    folder = dirname(str_replace(path, here("data", "csiro-climate", "projections"), "")),
    file = basename(path)) %>%
  separate(file,
    into = c("zone_nathers", "zone_acdb", "location_code", "NH16", "format",
      "scenario", "scenario_year", "gcm", "ext"),
    sep = "[_.]") %>%
  select(-NH16, -format, -ext) ->
all_projections

tibble(
  path = list.files(here("data", "csiro-climate", "typical"), pattern = "*.epw",
    full.names = TRUE, recursive = TRUE)) %>%
  mutate(
    folder = dirname(str_replace(path, here("data", "csiro-climate", "projections"), "")),
    file = basename(path)) %>%
  separate(file,
    into = c("zone_nathers", "zone_acdb", "location_code", "NH16", "format", "ext"),
    sep = "[_.]") %>%
  select(-NH16, -format, -ext) %>%
  mutate(
    scenario = "Historical",
    scenario_year = "1990-2015",
    gcm = NA)->
all_historical

all_projections %>%
  bind_rows(all_historical) ->
all_files
```

Unfortunately, these files differ a little bit from the format expected from an .epw file-reading package like [`{eplusr}`](https://github.com/hongyuanjia/eplusr), so I'm going to parse the header manually, then read the time series data in with a regular CSV reader.

```{r}
#| label: fn-extract-epw-header
extract_header <- function(path) {
  header <-
    readLines(path, n = 8) %>%
    str_split(",\\s?")

  return(tibble(
    town = header[[1]][2],
    state = header[[1]][3],
    country = header[[1]][4],
    wmo_number = header[[1]][6],
    lat = header[[1]][7],
    lon = header[[1]][8],
    utc_offset = header[[1]][9],
    elevation = header[[1]][10]))
}
```

```{r}
#| label: tidy-epw-headers

# get headers and then content
all_files %>%
  mutate(header = map(path, extract_header)) %>%
  unnest(header) %>%
  mutate(
    timeseries = map(path, read_csv,
      skip = 8,
      col_types = "iiii--d-------------------------",
      col_names = c("year", "month", "day", "hour", "temperature"))) ->
all_data
```

Let's also get the town names and zone codes out of this, because the actual NatHERS definition file downloaded in </analysis/neathers-zones/boundaries.qmd>doesn't have names.

```{r}
#| label: town-list

all_data %>%
  rename(zone = zone_nathers) %>%
  distinct(zone, town) %>%
  write_csv(here("data", "nathers-zone-names.csv"))
```